[{"/Users/jed/Desktop/code/url-preview-website-new/src/App.js":"1","/Users/jed/Desktop/code/url-preview-website-new/src/components/Home.js":"2","/Users/jed/Desktop/code/url-preview-website-new/src/index.js":"3","/Users/jed/Desktop/code/url-preview-website-new/src/reportWebVitals.js":"4","/Users/jed/Desktop/code/url-preview-website-new/src/hooks/useFetch.js":"5"},{"size":197,"mtime":1611576323234,"results":"6","hashOfConfig":"7"},{"size":5297,"mtime":1612766068313,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1611575199662,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1611575199662,"results":"10","hashOfConfig":"7"},{"size":1007,"mtime":1612823934370,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"m7zm3q",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/jed/Desktop/code/url-preview-website-new/src/App.js",["24"],"\nimport \"antd/dist/antd.css\";\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jed/Desktop/code/url-preview-website-new/src/components/Home.js",["25"],"/Users/jed/Desktop/code/url-preview-website-new/src/index.js",[],"/Users/jed/Desktop/code/url-preview-website-new/src/reportWebVitals.js",[],"/Users/jed/Desktop/code/url-preview-website-new/src/hooks/useFetch.js",["26","27","28"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nexport default function useFetch({input}) {\n    \n    let containsFullStop = input.indexOf(\".\");\n    const [dataFetched, setDataFetched] = useState({});\n\n    const instance = axios.create({\n      baseURL: 'http://api.url-previewer.com',\n      timeout: 50000,\n      headers: {'Content-Type': 'application/json'}\n    });\n\n    useEffect(() => {\n    \n        const fetchData = async() => {\n          let results = await instance.get(`/?q=${input}`);\n          // let results = await axios.get(`http://localhost:4001?q=${input}`);\n          let status = results.status;\n    \n          if(status == 200) {\n            let data = results.data;\n            console.log(data);\n            setDataFetched(data);\n          }\n        }\n    \n        if(containsFullStop > 0 && (input.length - containsFullStop )> 3){\n          fetchData();\n        }\n         return () => [dataFetched]\n      }, [input])\n    \n    \n      return dataFetched;\n\n}\n",{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"29","severity":1,"message":"33","line":2,"column":24,"nodeType":"31","messageId":"32","endLine":2,"endColumn":34},{"ruleId":"29","severity":1,"message":"34","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":13},{"ruleId":"35","severity":1,"message":"36","line":22,"column":21,"nodeType":"37","messageId":"38","endLine":22,"endColumn":23},{"ruleId":"39","severity":1,"message":"40","line":33,"column":10,"nodeType":"41","endLine":33,"endColumn":17,"suggestions":"42"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'containsFullStop', 'dataFetched', and 'instance'. Either include them or remove the dependency array.","ArrayExpression",["43"],{"desc":"44","fix":"45"},"Update the dependencies array to be: [containsFullStop, dataFetched, input, instance]",{"range":"46","text":"47"},[959,966],"[containsFullStop, dataFetched, input, instance]"]