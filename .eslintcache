[{"/Users/jed/Desktop/code/url-preview-website-new/src/App.js":"1","/Users/jed/Desktop/code/url-preview-website-new/src/components/Home.js":"2","/Users/jed/Desktop/code/url-preview-website-new/src/index.js":"3","/Users/jed/Desktop/code/url-preview-website-new/src/reportWebVitals.js":"4","/Users/jed/Desktop/code/url-preview-website-new/src/hooks/useFetch.js":"5"},{"size":197,"mtime":1611576323234,"results":"6","hashOfConfig":"7"},{"size":5230,"mtime":1612438081928,"results":"8","hashOfConfig":"7"},{"size":500,"mtime":1611575199662,"results":"9","hashOfConfig":"7"},{"size":362,"mtime":1611575199662,"results":"10","hashOfConfig":"7"},{"size":865,"mtime":1612349199625,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"m7zm3q",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/Users/jed/Desktop/code/url-preview-website-new/src/App.js",["25"],"\nimport \"antd/dist/antd.css\";\nimport './App.css';\nimport Home from './components/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jed/Desktop/code/url-preview-website-new/src/components/Home.js",["26","27","28"],"import {useState} from 'react';\nimport { Layout, Menu, Breadcrumb , Row, Col, Input} from 'antd';\nimport Logo from '../images/url-preview-logo.png';\nimport BannerImage from '../images/BannerImage.png';\nimport './home.css';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport useFetch from '../hooks/useFetch';\n\n\nconst { Header, Content, Footer } = Layout;\n\nexport default function Home() {\n  const [inputData, setInputData] = useState(\"\");\n  const [currentText, setCurrentText] = useState(\"Copy\");\n\n  const parsedData = useFetch({input: inputData});\n\n  const handleInputChange = (e) => {\n    setInputData(e.target.value);\n  }\n\n  const handleCopyText = () => {\n    setCurrentText(\"Copied\");\n    setTimeout(() => {\n      setCurrentText(\"Copy\");\n    }, 3000);\n  }\n\n    return (\n        <Layout className=\"layout\">\n    <Header style={{background: \"#FFF\"}}>\n     \n      <Menu theme=\"light\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n      <Menu.Item key=\"1\">\n      <div className=\"logo\" > \n      <img src={Logo} style={{height: \"50px\", width: \"180px\"}} />\n      </div>\n      </Menu.Item>\n        {/* <Menu.Item key=\"2\">Url Previewer</Menu.Item>\n      <Menu.Item key=\"3\">nav 3</Menu.Item>\n        <Menu.Item key=\"4\">nav 4</Menu.Item>\n        */}\n      </Menu> \n    </Header>\n    <Content style={{ padding: '0 50px', backgroundColor: \"#FFF\" }}>\n     \n      <div className=\"site-layout-content\">\n      <Row gutter={24} style={{marginTop: \"20px\"}}>\n        <Col xs={0} sm={2} md={2}></Col>\n        <Col xs={24} sm={24} md={10} style={{textAlign: \"start\"}}>\n          <h1 className=\"banner-text\">Add Previews to URL with ease in your code</h1>\n          <h3>Get basic website information from any given URL, in JSON format, for Free!</h3>\n        </Col>\n\n        <Col xs={24} sm={24} md={12}>\n        <img src={BannerImage} style={{width: \"100%\", height: \"auto\"}} />\n        </Col>\n      </Row>\n\n      <Row className=\"top-margin-sm\">\n        <Col xs={24} md={24} className=\"top-margin-sm\" >\n        <h1 className=\"sub-heading\" style={{marginBottom: \"0px\"}}>Basic Example</h1>\n        </Col>\n      </Row>\n\n      <Row className=\"\">\n        <Col xs={0} md={2} xl={4}></Col>\n        <Col xs={24} md={20} xl={16}>\n          <Row>\n      <Col xs={24} sm={24} md={24}>\n        <h3 className=\"bottom-margin-sm align-left\">API Request</h3>\n      <div className=\"code-background\">\n      http://api.url-previewer.com/?q=https://www.google.com\n      </div>\n      </Col>\n\n      <Col xs={24} sm={24} md={24} className=\"top-margin-sm\">\n      <h3 className=\"top-margin-sm bottom-margin-sm align-left\">API Response</h3>\n      <div className=\"code-background\">\n      <div>{'{'} </div>\n<div>\"title\":\"Google\", </div>\n<div>\"description\":\"Search webpages, images, videos and more.\",</div>\n<div>\"image\":\"https:\\/\\/www.google.com\\/images\\/logo.png\",</div>\n<div>\"url\":\"https:\\/\\/www.google.com\\/\"</div>\n<div>{'}'}</div>\n      </div>\n      </Col>\n      </Row>\n      </Col>\n      </Row>\n      \n      <Row className=\"top-margin-sm\">\n        <Col xs={24} md={24} className=\"top-margin-sm\" style={{marginBottom: \"0px\"}}>\n        <h1 className=\"sub-heading\">Try it yourself</h1>\n        </Col>\n      </Row>\n      <Row className=\"bottom-margin-sm\">\n      <Col xs={0} md={2} xl={4}></Col>\n        <Col xs={24} md={20} xl={16}>\n          <Row>\n      <Col xs={24} sm={24} md={24}>\n        <h3 className=\"bottom-margin-sm align-left\">API Request</h3>\n        <div className=\"code-background\">\n              https://youtube.com\n              <CopyToClipboard text={\"https://youtube.com\"} \n              onCopy={() => handleCopyText()}>\n              <span  size=\"small\" style={{float: \"right\", cursor: \"pointer\", color: \"#0b3abe\"}} > {currentText}</span>\n              </CopyToClipboard>\n              </div>\n      </Col>\n\n      <Col xs={24} sm={24} md={24}>\n\n      </Col>\n\n      <Col xs={24} sm={24} md={24} className=\"top-margin-sm\">\n      <div className=\"code-background\">\n      <div>\n                Paste url here\n              </div>\n              <div>\n              <Input style={{minHeight: \"50px\", fontSize: \"20px\"}} onChange={(e) => handleInputChange(e)}/>\n              </div>\n      </div>\n      </Col>\n      <Col xs={24} sm={24} md={24} className=\"top-margin-sm\">\n        <div className=\"code-background\">\n        {`{`}\n              {Object.keys(parsedData).map(dat => (\n                <div>\n                {`\"${dat}\"`} : {`\"${parsedData[dat]}\"`}\n                </div>\n              \n              ))}\n\n            {`}`}\n        </div>\n      </Col>\n      </Row>\n      </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n      <iframe src=\"https://codesandbox.io/embed/react-new?fontsize=14&hidenavigation=1&theme=dark\" style={{width: '100%', height: 500, border: 0, borderRadius: 4, overflow: 'hidden'}} title=\"React\" allow=\"accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking\" sandbox=\"allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts\" />\n\n        </Col>\n      </Row>\n      </div>\n    </Content>\n    <Footer style={{ textAlign: 'center' }}>Url-Previewer Â©2021 Created by Jed</Footer>\n  </Layout>\n    )\n}\n","/Users/jed/Desktop/code/url-preview-website-new/src/index.js",[],"/Users/jed/Desktop/code/url-preview-website-new/src/reportWebVitals.js",[],"/Users/jed/Desktop/code/url-preview-website-new/src/hooks/useFetch.js",["29","30","31"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\nexport default function useFetch({input}) {\n    \n    let containsFullStop = input.indexOf(\".\");\n    const [dataFetched, setDataFetched] = useState({});\n\n    useEffect(() => {\n    \n        const fetchData = async() => {\n          let results = await axios.get(`http://api.url-previewer.com?q=${input}`);\n          // let results = await axios.get(`http://localhost:4001?q=${input}`);\n          let status = results.status;\n    \n          if(status == 200) {\n            let data = results.data;\n            console.log(data);\n            setDataFetched(data);\n          }\n        }\n    \n        if(containsFullStop > 0 && (input.length - containsFullStop )> 3){\n          fetchData();\n        }\n         return () => [dataFetched]\n      }, [input])\n    \n    \n      return dataFetched;\n\n}\n",{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"32","severity":1,"message":"36","line":2,"column":24,"nodeType":"34","messageId":"35","endLine":2,"endColumn":34},{"ruleId":"37","severity":1,"message":"38","line":36,"column":7,"nodeType":"39","endLine":36,"endColumn":66},{"ruleId":"37","severity":1,"message":"38","line":56,"column":9,"nodeType":"39","endLine":56,"endColumn":74},{"ruleId":"32","severity":1,"message":"40","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"42","line":16,"column":21,"nodeType":"43","messageId":"44","endLine":16,"endColumn":23},{"ruleId":"45","severity":1,"message":"46","line":27,"column":10,"nodeType":"47","endLine":27,"endColumn":17,"suggestions":"48"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Breadcrumb' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'React' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'containsFullStop' and 'dataFetched'. Either include them or remove the dependency array.","ArrayExpression",["49"],{"desc":"50","fix":"51"},"Update the dependencies array to be: [containsFullStop, dataFetched, input]",{"range":"52","text":"53"},[817,824],"[containsFullStop, dataFetched, input]"]